
akka {
	loggers = ["akka.event.slf4j.Slf4jLogger"]
	logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
	logger-startup-timeout = 10s
	log-dead-letters = 0
	akka.log-dead-letters-during-shutdown = 0
}

my-blocking-dispatcher {
	type = Dispatcher
	executor = "thread-pool-executor"
	thread-pool-executor {
		fixed-pool-size = 16
	}
	throughput = 100
}

cpauth {
	http {
		serviceHost = ${cpauth.auth.pub.cpauthHost}
		loginPath = "/login/"
		servicePrivatePort = 8080

		drupalProxying {
			"www.icos-cp.eu": {ipv4Host: "127.0.0.1", port: 8096}
		}
	}

	saml{
		idpMetadataFilePath = "/swamid-idps.xml"
		privateKeyPath = ${cpauth.auth.priv.privateKeyPath}
		idpCookieName = "lastChosenIdp"

		spConfig {
			url = "https://cpauth.icos-cp.eu/saml/cpauth"
			consumerServiceUrl = "https://cpauth.icos-cp.eu/saml/SAML2/POST"
			idpShortList = [
				"https://idpv3.lu.se/idp/shibboleth"
			]
		}

		attributes {
			mail = ["mail", "urn:oid:0.9.2342.19200300.100.1.3"]
			givenName = ["givenName", "urn:oid:2.5.4.42"]
			surname = ["sn", "surname", "urn:oid:2.5.4.4"]
		}
	}

	auth{
		priv{
			authTokenValiditySeconds = 100000
			privateKeyPath = "/crypto/private/cpauth_private.der"
		}
		pub{
			//content gets merged into here from reference.conf in the core project
		}

	}

	database {
		driver = "org.hsqldb.jdbc.JDBCDataSource"
		url = "jdbc:hsqldb:file:db/cpauth"
		user = "SA"
		password = ""
	}

	restheart{
		baseUri = "http://127.0.0.1:8088"
		dbName = "db"
		usersCollection = "users"
	}

	mailing{
		smtpServer: "mail.lu.se"
		fromAddress: "do_not_reply@icos-cp.eu"
		//logBccAddress: "carbon.mail@nateko.lu.se"
	}

	oauth{
	
		facebook{
			// clientId: "dummy"
			// clientSecret: "dummy"
			redirectPath: "https://cpauth.icos-cp.eu/oauth/facebook"
		}

		orcidid{
			// clientId: "dummy"
			// clientSecret: "dummy"
			redirectPath: "https://cpauth.icos-cp.eu/oauth/orcidid"
		}
	}
}

